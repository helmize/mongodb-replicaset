{
  "v1": {
    "config": null,
    "helmValues": "replicaSet: rs0\nreplicas: 3\nminAvailable: 1\nport: 27017\n\nauth:\n  enabled: false\n  # adminUser: username\n  # adminPassword: password\n  # key: keycontent\n  # existingKeySecret:\n  # existingAdminSecret:\n\n# Specs for the Docker image for the init container that establishes the replica set\ninstallImage:\n  name: k8s.gcr.io/mongodb-install\n  tag: 0.5\n  pullPolicy: IfNotPresent\n\n# Specs for the MongoDB image\nimage:\n  name: mongo\n  tag: 3.4\n  pullPolicy: IfNotPresent\n\n# Annotations to be added to MongoDB pods\npodAnnotations: {}\n\nresources: {}\n# limits:\n#   cpu: 500m\n#   memory: 512Mi\n# requests:\n#   cpu: 100m\n#   memory: 256Mi\n\n## Node selector\n## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\nnodeSelector: {}\n\naffinity: {}\n\ntolerations: []\n\npersistentVolume:\n  enabled: true\n  ## mongodb-replicaset data Persistent Volume Storage Class\n  ## If defined, storageClassName: \u003cstorageClass\u003e\n  ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  ## If undefined (the default) or set to null, no storageClassName spec is\n  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n  ##   GKE, AWS \u0026 OpenStack)\n  ##\n  # storageClass: \"-\"\n  accessModes:\n    - ReadWriteOnce\n  size: 10Gi\n  annotations: {}\n\n# Annotations to be added to the service\nserviceAnnotations: {}\n\ntls:\n  # Enable or disable MongoDB TLS support\n  enabled: false\n  # Please generate your own TLS CA by generating it via:\n  # $ openssl genrsa -out ca.key 2048\n  # $ openssl req -x509 -new -nodes -key ca.key -days 10000 -out ca.crt -subj \"/CN=mydomain.com\"\n  # After that you can base64 encode it and paste it here:\n  # $ cat ca.key | base64 -w0\n  # cacert:\n  # cakey:\n\n# Entries for the MongoDB config file\nconfigmap:\n  storage:\n    dbPath: /data/db\n  net:\n    port: 27017\n    # Uncomment for TLS support\n    # ssl:\n    #   mode: requireSSL\n    #   CAFile: /ca/tls.crt\n    #   PEMKeyFile: /work-dir/mongo.pem\n  replication:\n    replSetName: rs0\n  # Uncomment for TLS support or keyfile access control without TLS\n  # security:\n  #   authorization: enabled\n  #   keyFile: /keydir/key.txt\n",
    "releaseName": "mongodb-replicaset",
    "helmValuesDefaults": "replicaSet: rs0\nreplicas: 3\nminAvailable: 1\nport: 27017\n\nauth:\n  enabled: false\n  # adminUser: username\n  # adminPassword: password\n  # key: keycontent\n  # existingKeySecret:\n  # existingAdminSecret:\n\n# Specs for the Docker image for the init container that establishes the replica set\ninstallImage:\n  name: k8s.gcr.io/mongodb-install\n  tag: 0.5\n  pullPolicy: IfNotPresent\n\n# Specs for the MongoDB image\nimage:\n  name: mongo\n  tag: 3.4\n  pullPolicy: IfNotPresent\n\n# Annotations to be added to MongoDB pods\npodAnnotations: {}\n\nresources: {}\n# limits:\n#   cpu: 500m\n#   memory: 512Mi\n# requests:\n#   cpu: 100m\n#   memory: 256Mi\n\n## Node selector\n## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector\nnodeSelector: {}\n\naffinity: {}\n\ntolerations: []\n\npersistentVolume:\n  enabled: true\n  ## mongodb-replicaset data Persistent Volume Storage Class\n  ## If defined, storageClassName: \u003cstorageClass\u003e\n  ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\n  ## If undefined (the default) or set to null, no storageClassName spec is\n  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\n  ##   GKE, AWS \u0026 OpenStack)\n  ##\n  # storageClass: \"-\"\n  accessModes:\n    - ReadWriteOnce\n  size: 10Gi\n  annotations: {}\n\n# Annotations to be added to the service\nserviceAnnotations: {}\n\ntls:\n  # Enable or disable MongoDB TLS support\n  enabled: false\n  # Please generate your own TLS CA by generating it via:\n  # $ openssl genrsa -out ca.key 2048\n  # $ openssl req -x509 -new -nodes -key ca.key -days 10000 -out ca.crt -subj \"/CN=mydomain.com\"\n  # After that you can base64 encode it and paste it here:\n  # $ cat ca.key | base64 -w0\n  # cacert:\n  # cakey:\n\n# Entries for the MongoDB config file\nconfigmap:\n  storage:\n    dbPath: /data/db\n  net:\n    port: 27017\n    # Uncomment for TLS support\n    # ssl:\n    #   mode: requireSSL\n    #   CAFile: /ca/tls.crt\n    #   PEMKeyFile: /work-dir/mongo.pem\n  replication:\n    replSetName: rs0\n  # Uncomment for TLS support or keyfile access control without TLS\n  # security:\n  #   authorization: enabled\n  #   keyFile: /keydir/key.txt\n",
    "upstream": "https://github.com/helm/charts/tree/1144328634b2010bbee6f95ffcde490c40bf816a/stable/mongodb-replicaset",
    "metadata": {
      "applicationType": "helm",
      "icon": "https://webassets.mongodb.com/_com_assets/cms/mongodb-logo-rgb-j6w271g1xn.jpg",
      "name": "mongodb-replicaset",
      "releaseNotes": "Convert registry to k8s.gcr.io (#3141)\n\n* Pushes go to staging-k8s.gcr.io\n\n* Updating chart version",
      "version": "2.2.1"
    },
    "contentSHA": "3951a835b876c23c79fb80fa197672b72e58b6d06869992979ad117f836eaf79",
    "lifecycle": {
      "stepsCompleted": {
        "intro": true,
        "kustomize": true,
        "kustomize-intro": true,
        "outro": true,
        "render": true,
        "values": true
      }
    }
  }
}