apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  labels:
    app: mongodb-replicaset
    release: mongodb-replicaset
  name: mongodb-replicaset
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mongodb-replicaset
      release: mongodb-replicaset
  serviceName: mongodb-replicaset
  template:
    metadata:
      annotations: null
      labels:
        app: mongodb-replicaset
        release: mongodb-replicaset
    spec:
      containers:
      - command:
        - mongod
        - --config=/config/mongod.conf
        image: mongo:3.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - db.adminCommand('ping')
          initialDelaySeconds: 30
          timeoutSeconds: 5
        name: mongodb-replicaset
        ports:
        - containerPort: 27017
          name: peer
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - db.adminCommand('ping')
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources: {}
        volumeMounts:
        - mountPath: /data/db
          name: datadir
        - mountPath: /config
          name: config
        - mountPath: /work-dir
          name: workdir
      initContainers:
      - args:
        - --work-dir=/work-dir
        image: k8s.gcr.io/mongodb-install:0.5
        imagePullPolicy: IfNotPresent
        name: install
        volumeMounts:
        - mountPath: /work-dir
          name: workdir
        - mountPath: /config
          name: config
      - args:
        - -on-start=/work-dir/on-start.sh
        - -service=mongodb-replicaset
        command:
        - /work-dir/peer-finder
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: REPLICA_SET
          value: rs0
        image: mongo:3.4
        imagePullPolicy: IfNotPresent
        name: bootstrap
        volumeMounts:
        - mountPath: /work-dir
          name: workdir
        - mountPath: /config
          name: config
        - mountPath: /data/db
          name: datadir
      volumes:
      - configMap:
          name: mongodb-replicaset
        name: config
      - emptyDir: {}
        name: workdir
  volumeClaimTemplates:
  - metadata:
      annotations: null
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
